version: '3'
x-spark-common: &spark-common
  build:
    context: .
    dockerfile: Dockerfile-spark
  volumes:
    - ./jobs:/opt/bitnami/spark/jobs
  env_file:
    - .env
  networks:
    - private-net

services:
  spark-master:
    hostname: spark-master
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"

  spark-worker-1:
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_MASTER_URL: spark://spark-master:7077

  spark-worker-2:
    <<: *spark-common
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_MASTER_URL: spark://spark-master:7077

  namenode:
    image: apache/hadoop:3.3.5
    hostname: namenode
    command: ["hdfs", "namenode"]
    ports:
      - 9870:9870
    env_file:
      - ./hdfs_config
    environment:
        ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
    networks:
      - private-net

  datanode:
    image: apache/hadoop:3.3.5
    command: ["hdfs", "datanode"]
    env_file:
      - ./hdfs_config      
    networks:
      - private-net

  resourcemanager:
    image: apache/hadoop:3.3.5
    hostname: resourcemanager
    command: ["yarn", "resourcemanager"]
    ports:
        - 8088:8088
    env_file:
      - ./hdfs_config
    volumes:
      - ./test.sh:/opt/test.sh
    networks:
      - private-net

  nodemanager:
    image: apache/hadoop:3.3.5
    command: ["yarn", "nodemanager"]
    env_file:
      - ./hdfs_config
    networks:
      - private-net
  
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - private-net

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
      - '9093:9093'   # Cổng cho kết nối từ bên ngoài
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - private-net
      
  kafka-topic-creator:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
    entrypoint: ["/bin/bash", "-c", "sleep 30 && python /create_topics.py"]
    networks:
      - private-net

  database:
    image: postgres:14
    container_name: database
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=traffic_db
    volumes:
      # - "./users_postgres_data:/var/lib/postgresql/data:rw"
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - private-net
          
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=username@admin.com
      - PGADMIN_DEFAULT_PASSWORD=password
    ports:
      - "8081:80"
    networks:
      - private-net
networks:
  private-net: